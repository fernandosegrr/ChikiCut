@page
@model ChikiCut.web.Pages.Roles.DetailsModel
@{
    ViewData["Title"] = "Detalles del Rol";
}

<div class="page-header mb-4">
    <div class="row align-items-center">
        <div class="col">
            <h1><i class="bi bi-shield-check me-2"></i>@Model.Rol.Nombre</h1>
            <p class="text-muted">Información detallada del rol</p>
        </div>
        <div class="col-auto">
            <div class="btn-group" role="group">
                <a asp-page="Edit" asp-route-id="@Model.Rol.Id" class="btn btn-primary">
                    <i class="bi bi-pencil me-1"></i>Editar
                </a>
                <a asp-page="Delete" asp-route-id="@Model.Rol.Id" class="btn btn-outline-danger">
                    <i class="bi bi-gear me-1"></i>Gestionar
                </a>
                <a asp-page="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left me-1"></i>Volver
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <!-- Información básica -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="bi bi-info-circle me-2"></i><strong>Información Básica</strong>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">Nombre:</dt>
                            <dd class="col-sm-8"><strong>@Model.Rol.Nombre</strong></dd>
                            <dt class="col-sm-4">Nivel:</dt>
                            <dd class="col-sm-8">
                                <span class="badge @(Model.Rol.NivelAcceso switch 
                                {
                                    5 => "bg-danger",
                                    4 => "bg-warning text-dark", 
                                    3 => "bg-info",
                                    2 => "bg-primary",
                                    1 => "bg-secondary",
                                    _ => "bg-dark"
                                })">
                                    @Model.Rol.NivelDescripcion
                                </span>
                            </dd>
                            <dt class="col-sm-4">Estado:</dt>
                            <dd class="col-sm-8">
                                @if (Model.Rol.IsActive)
                                {
                                    <span class="badge bg-success">Activo</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Inactivo</span>
                                }
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-5">Creado:</dt>
                            <dd class="col-sm-7">@Model.Rol.CreatedAt.ToString("dd/MM/yyyy HH:mm")</dd>
                            @if (Model.Rol.UpdatedAt.HasValue)
                            {
                                <dt class="col-sm-5">Modificado:</dt>
                                <dd class="col-sm-7">@Model.Rol.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</dd>
                            }
                            <dt class="col-sm-5">Usuarios:</dt>
                            <dd class="col-sm-7">
                                @if (Model.UsuariosAsignados.Count > 0)
                                {
                                    <span class="badge bg-success">@Model.UsuariosAsignados.Count asignado(s)</span>
                                }
                                else
                                {
                                    <span class="text-muted">Sin usuarios asignados</span>
                                }
                            </dd>
                        </dl>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.Rol.Descripcion))
                {
                    <hr>
                    <div class="row">
                        <div class="col-12">
                            <dt>Descripción:</dt>
                            <dd class="mt-2">@Model.Rol.Descripcion</dd>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Configuración de permisos -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="bi bi-gear me-2"></i><strong>Permisos Configurados</strong>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Módulo</th>
                                <th class="text-center">Ver</th>
                                <th class="text-center">Crear</th>
                                <th class="text-center">Editar</th>
                                <th class="text-center">Eliminar</th>
                                <th>Resumen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var modulo in new[] { 
                                new { Key = "usuarios", Name = "Usuarios", Icon = "bi-people" },
                                new { Key = "empleados", Name = "Empleados", Icon = "bi-person-badge" },
                                new { Key = "sucursales", Name = "Sucursales", Icon = "bi-building" },
                                new { Key = "puestos", Name = "Puestos", Icon = "bi-person-workspace" },
                                new { Key = "proveedores", Name = "Proveedores", Icon = "bi-truck" },
                                new { Key = "servicios", Name = "Servicios", Icon = "bi-scissors" },
                                new { Key = "productos", Name = "Productos", Icon = "bi-box-seam" },
                                new { Key = "clientes", Name = "Clientes", Icon = "bi-person-hearts" },
                                new { Key = "conceptosgasto", Name = "Conceptos de Gastos", Icon = "bi-cash-coin" },
                                new { Key = "roles", Name = "Roles", Icon = "bi-shield-check" },
                                new { Key = "reportes", Name = "Reportes", Icon = "bi-graph-up" }
                            })
                            {
                                var permisoModulo = Model.Permisos.ContainsKey(modulo.Key) ? Model.Permisos[modulo.Key] : null;
                                var permisos = new List<string>();
                                if (permisoModulo != null)
                                {
                                    if (permisoModulo.Read) permisos.Add("Ver");
                                    if (permisoModulo.Create) permisos.Add("Crear");
                                    if (permisoModulo.Update) permisos.Add("Editar");
                                    if (permisoModulo.Delete) permisos.Add("Eliminar");
                                }
                                <tr>
                                    <td>
                                        <i class="@modulo.Icon me-2"></i>@modulo.Name
                                    </td>
                                    <td class="text-center">
                                        @if (permisoModulo != null && permisoModulo.Read)
                                        {
                                            <i class="bi bi-check-circle-fill text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-x-circle text-muted"></i>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (permisoModulo != null && permisoModulo.Create)
                                        {
                                            <i class="bi bi-check-circle-fill text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-x-circle text-muted"></i>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (permisoModulo != null && permisoModulo.Update)
                                        {
                                            <i class="bi bi-check-circle-fill text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-x-circle text-muted"></i>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (permisoModulo != null && permisoModulo.Delete)
                                        {
                                            <i class="bi bi-check-circle-fill text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-x-circle text-muted"></i>
                                        }
                                    </td>
                                    <td>
                                        @if (permisos.Any())
                                        {
                                            <small class="text-success">@string.Join(", ", permisos)</small>
                                        }
                                        else
                                        {
                                            <small class="text-muted">Sin permisos</small>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Usuarios asignados -->
        @if (Model.UsuariosAsignados.Any())
        {
            <div class="card">
                <div class="card-header">
                    <i class="bi bi-people me-2"></i><strong>Usuarios con este Rol (@Model.UsuariosAsignados.Count)</strong>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Usuario</th>
                                    <th>Empleado</th>
                                    <th>Sucursal</th>
                                    <th>Último Acceso</th>
                                    <th>Estado</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var usuario in Model.UsuariosAsignados)
                                {
                                    <tr>
                                        <td>
                                            <div>
                                                <strong>@usuario.Email</strong>
                                                <br><small class="text-muted">@usuario.CodigoUsuario</small>
                                            </div>
                                        </td>
                                        <td>@usuario.Empleado?.NombreCompleto</td>
                                        <td>@usuario.Empleado?.Sucursal?.Name</td>
                                        <td>
                                            @if (usuario.UltimoAcceso.HasValue)
                                            {
                                                <small>@usuario.UltimoAcceso.Value.ToString("dd/MM/yyyy HH:mm")</small>
                                            }
                                            else
                                            {
                                                <small class="text-muted">Nunca</small>
                                            }
                                        </td>
                                        <td>
                                            @if (usuario.EstaBloqueado)
                                            {
                                                <span class="badge bg-warning">Bloqueado</span>
                                            }
                                            else if (usuario.IsActive)
                                            {
                                                <span class="badge bg-success">Activo</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Inactivo</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Panel lateral -->
    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <i class="bi bi-graph-up me-2"></i><strong>Estadísticas</strong>
            </div>
            <div class="card-body text-center">
                <div class="row">
                    <div class="col-6">
                        <h4 class="text-primary">@Model.UsuariosAsignados.Count</h4>
                        <small class="text-muted">Usuarios</small>
                    </div>
                    <div class="col-6">
                        <h4 class="text-info">@Model.Permisos.Values.Sum(p => (p.Read ? 1 : 0) + (p.Create ? 1 : 0) + (p.Update ? 1 : 0) + (p.Delete ? 1 : 0))</h4>
                        <small class="text-muted">Permisos</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <i class="bi bi-info-circle me-2"></i><strong>Información del Nivel</strong>
            </div>
            <div class="card-body">
                @switch (Model.Rol.NivelAcceso)
                {
                    case 1:
                        <p class="small">
                            <strong>Nivel Limitado:</strong> Acceso de solo lectura a información básica. 
                            Ideal para usuarios que necesitan consultar datos sin realizar modificaciones.
                        </p>
                        break;
                    case 2:
                        <p class="small">
                            <strong>Nivel Básico:</strong> Operaciones básicas del día a día. 
                            Puede realizar tareas operativas estándar con supervisión.
                        </p>
                        break;
                    case 3:
                        <p class="small">
                            <strong>Nivel Intermedio:</strong> Supervisión y gestión intermedia. 
                            Puede crear y modificar registros, con acceso a reportes avanzados.
                        </p>
                        break;
                    case 4:
                        <p class="small">
                            <strong>Nivel Avanzado:</strong> Gestión completa de módulos operativos. 
                            Acceso casi total, incluyendo gestión de usuarios básica.
                        </p>
                        break;
                    case 5:
                        <p class="small">
                            <strong>Nivel Administrador:</strong> Acceso total al sistema. 
                            Puede gestionar todos los aspectos incluyendo roles y configuraciones críticas.
                        </p>
                        break;
                }
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <i class="bi bi-shield-exclamation me-2"></i><strong>Seguridad</strong>
            </div>
            <div class="card-body">
                <ul class="small">
                    @if (Model.Rol.NivelAcceso == 5)
                    {
                        <li class="text-danger">Este es un rol de administrador con acceso total</li>
                    }
                    @if (Model.UsuariosAsignados.Count > 0)
                    {
                        <li class="text-warning">@Model.UsuariosAsignados.Count usuario(s) dependen de este rol</li>
                    }
                    @if (!Model.Rol.IsActive)
                    {
                        <li class="text-info">Rol inactivo - no se puede asignar a nuevos usuarios</li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div></div>