@page
@model ChikiCut.web.Pages.Servicios.AsignarModel
@{
    ViewData["Title"] = "Asignar Sucursales";
}

<div class="page-header mb-4">
    <div class="row align-items-center">
        <div class="col">
            <h1><i class="bi bi-building me-2"></i>Asignar Sucursales</h1>
            <p class="text-muted">Configura en qué sucursales estará disponible: <strong>@Model.Servicio.Nombre</strong></p>
        </div>
        <div class="col-auto">
            <div class="btn-group" role="group">
                <a asp-page="Details" asp-route-id="@Model.Servicio.Id" class="btn btn-info">
                    <i class="bi bi-eye me-1"></i>Ver Detalles
                </a>
                <a asp-page="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left me-1"></i>Volver a Lista
                </a>
            </div>
        </div>
    </div>
</div>

@if (!Model.TieneAccesoGlobal && !Model.SucursalesDisponibles.Any())
{
    <div class="alert alert-warning">
        <i class="bi bi-exclamation-triangle me-2"></i>
        <strong>Sin sucursales disponibles:</strong> No tienes permisos para asignar servicios a sucursales.
    </div>
}
else
{
    <!-- Información del servicio -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h5 class="mb-1">@Model.Servicio.Nombre</h5>
                    <div class="d-flex gap-3 small text-muted">
                        <span><i class="bi bi-tag me-1"></i>@Model.Servicio.Codigo</span>
                        <span><i class="bi bi-folder me-1"></i>@Model.Servicio.Categoria</span>
                        <span><i class="bi bi-currency-dollar me-1"></i>@Model.Servicio.PrecioFormateado (base)</span>
                        <span><i class="bi bi-clock me-1"></i>@Model.Servicio.DuracionFormateada</span>
                    </div>
                </div>
                <div class="col-md-4 text-end">
                    <span class="badge @(Model.Servicio.IsActive ? "bg-success" : "bg-danger") fs-6">
                        @Model.Servicio.EstadoDescripcion
                    </span>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.TieneAccesoGlobal)
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            <strong>Vista filtrada:</strong> Solo puedes asignar a las sucursales: 
            @foreach (var sucursal in Model.SucursalesUsuario)
            {
                <span class="badge bg-primary me-1">@sucursal</span>
            }
        </div>
    }

    <form method="post" id="asignarForm">
        <div asp-validation-summary="All" class="text-danger mb-3"></div>

        <!-- Acciones rápidas -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="bi bi-lightning me-2"></i><strong>Acciones Rápidas</strong>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-4">
                        <button type="button" class="btn btn-success w-100" onclick="seleccionarTodas()">
                            <i class="bi bi-check-all me-1"></i>Asignar a Todas
                        </button>
                    </div>
                    <div class="col-md-4">
                        <button type="button" class="btn btn-warning w-100" onclick="aplicarPrecioBase()">
                            <i class="bi bi-currency-dollar me-1"></i>Aplicar Precio Base
                        </button>
                    </div>
                    <div class="col-md-4">
                        <button type="button" class="btn btn-outline-secondary w-100" onclick="limpiarSeleccion()">
                            <i class="bi bi-x-circle me-1"></i>Quitar Todas
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Lista de sucursales -->
        <div class="card">
            <div class="card-header">
                <i class="bi bi-list-check me-2"></i><strong>Sucursales Disponibles (@Model.SucursalesDisponibles.Count)</strong>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th width="60px">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="selectAll" onchange="toggleSelectAll()">
                                        <label class="form-check-label" for="selectAll">Todo</label>
                                    </div>
                                </th>
                                <th>Sucursal</th>
                                <th>Precio Local</th>
                                <th>Duración (min)</th>
                                <th>Descuento Máx. (%)</th>
                                <th>Estado Actual</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Asignaciones.Count; i++)
                            {
                                var asignacion = Model.Asignaciones[i];
                                var sucursalData = Model.SucursalesDisponibles[i];
                                
                                <tr class="sucursal-row" data-sucursal-id="@asignacion.SucursalId">
                                    <td>
                                        <div class="form-check">
                                            <input type="hidden" asp-for="Asignaciones[i].SucursalId" />
                                            <input type="hidden" asp-for="Asignaciones[i].SucursalNombre" />
                                            <input type="checkbox" asp-for="Asignaciones[i].Asignado" 
                                                   class="form-check-input sucursal-checkbox" 
                                                   onchange="toggleSucursalInputs(@i)" />
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-building me-2 text-primary"></i>
                                            <div>
                                                <strong>@sucursalData.Sucursal.Name</strong>
                                                <br><small class="text-muted">@sucursalData.Sucursal.City, @sucursalData.Sucursal.State</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="input-group input-group-sm">
                                            <span class="input-group-text">$</span>
                                            <input asp-for="Asignaciones[i].PrecioLocal" 
                                                   class="form-control precio-input" 
                                                   type="number" 
                                                   step="0.01" 
                                                   min="0"
                                                   data-precio-base="@Model.Servicio.PrecioBase"
                                                   disabled="@(!asignacion.Asignado)" />
                                        </div>
                                        @if (sucursalData.AsignacionActual != null && sucursalData.AsignacionActual.PrecioLocal != Model.Servicio.PrecioBase)
                                        {
                                            var diferencia = ((sucursalData.AsignacionActual.PrecioLocal - Model.Servicio.PrecioBase) / Model.Servicio.PrecioBase * 100);
                                            <small class="@(diferencia > 0 ? "text-success" : "text-danger")">
                                                @diferencia.ToString("+0.0;-0.0")% vs base
                                            </small>
                                        }
                                    </td>
                                    <td>
                                        <input asp-for="Asignaciones[i].DuracionLocal" 
                                               class="form-control form-control-sm duracion-input" 
                                               type="number" 
                                               min="0" 
                                               max="480"
                                               placeholder="@Model.Servicio.DuracionEstimada"
                                               disabled="@(!asignacion.Asignado)" />
                                        <small class="text-muted">Base: @Model.Servicio.DuracionEstimada min</small>
                                    </td>
                                    <td>
                                        <input asp-for="Asignaciones[i].DescuentoMaximo" 
                                               class="form-control form-control-sm descuento-input" 
                                               type="number" 
                                               step="0.01" 
                                               min="0" 
                                               max="100"
                                               disabled="@(!asignacion.Asignado)" />
                                    </td>
                                    <td>
                                        @if (sucursalData.EstaAsignado)
                                        {
                                            <span class="badge bg-success">
                                                <i class="bi bi-check-circle me-1"></i>Asignado
                                            </span>
                                            <br><small class="text-muted">
                                                Precio: @sucursalData.AsignacionActual?.PrecioFormateado
                                            </small>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">
                                                <i class="bi bi-x-circle me-1"></i>No asignado
                                            </span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Botones de acción -->
        <div class="d-flex gap-2 mt-4">
            <button type="submit" class="btn btn-success btn-lg">
                <i class="bi bi-check-circle me-1"></i>Guardar Asignaciones
            </button>
            <button type="button" class="btn btn-info" onclick="previsualizarCambios()">
                <i class="bi bi-eye me-1"></i>Previsualizar
            </button>
            <a asp-page="Details" asp-route-id="@Model.Servicio.Id" class="btn btn-secondary">
                <i class="bi bi-arrow-left me-1"></i>Cancelar
            </a>
        </div>
    </form>
}

<!-- Modal de previsualización -->
<div class="modal fade" id="previewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-eye me-2"></i>Previsualización de Cambios
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="previewContent">
                <!-- Contenido generado dinámicamente -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-success" onclick="document.getElementById('asignarForm').submit()">
                    <i class="bi bi-check-circle me-1"></i>Confirmar y Guardar
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Actualizar estado inicial de inputs
            for (let i = 0; i < @Model.Asignaciones.Count; i++) {
                toggleSucursalInputs(i);
            }
            
            actualizarSelectAll();
        });

        function toggleSucursalInputs(index) {
            const checkbox = document.querySelector(`input[name="Asignaciones[${index}].Asignado"]`);
            const precioInput = document.querySelector(`input[name="Asignaciones[${index}].PrecioLocal"]`);
            const duracionInput = document.querySelector(`input[name="Asignaciones[${index}].DuracionLocal"]`);
            const descuentoInput = document.querySelector(`input[name="Asignaciones[${index}].DescuentoMaximo"]`);
            const row = checkbox.closest('tr');

            const isChecked = checkbox.checked;
            
            precioInput.disabled = !isChecked;
            duracionInput.disabled = !isChecked;
            descuentoInput.disabled = !isChecked;
            
            if (isChecked) {
                row.classList.add('table-success');
                // Si no tiene precio, usar el precio base
                if (parseFloat(precioInput.value) <= 0) {
                    precioInput.value = precioInput.dataset.precioBase;
                }
            } else {
                row.classList.remove('table-success');
            }
            
            actualizarSelectAll();
        }

        function toggleSelectAll() {
            const selectAll = document.getElementById('selectAll');
            const checkboxes = document.querySelectorAll('.sucursal-checkbox');
            
            checkboxes.forEach((checkbox, index) => {
                checkbox.checked = selectAll.checked;
                toggleSucursalInputs(index);
            });
        }

        function actualizarSelectAll() {
            const selectAll = document.getElementById('selectAll');
            const checkboxes = document.querySelectorAll('.sucursal-checkbox');
            const checkedBoxes = document.querySelectorAll('.sucursal-checkbox:checked');
            
            selectAll.checked = checkboxes.length === checkedBoxes.length && checkboxes.length > 0;
            selectAll.indeterminate = checkedBoxes.length > 0 && checkedBoxes.length < checkboxes.length;
        }

        function seleccionarTodas() {
            document.getElementById('selectAll').checked = true;
            toggleSelectAll();
        }

        function limpiarSeleccion() {
            document.getElementById('selectAll').checked = false;
            toggleSelectAll();
        }

        function aplicarPrecioBase() {
            const precioBase = @Model.Servicio.PrecioBase;
            const precioInputs = document.querySelectorAll('.precio-input');
            
            precioInputs.forEach(input => {
                if (!input.disabled) {
                    input.value = precioBase;
                }
            });
        }

        function previsualizarCambios() {
            const asignadas = [];
            const removidas = [];
            
            document.querySelectorAll('.sucursal-checkbox').forEach((checkbox, index) => {
                const sucursalNombre = checkbox.closest('tr').querySelector('strong').textContent;
                const precioInput = document.querySelector(`input[name="Asignaciones[${index}].PrecioLocal"]`);
                
                if (checkbox.checked) {
                    asignadas.push({
                        nombre: sucursalNombre,
                        precio: parseFloat(precioInput.value).toLocaleString('es-MX', {style: 'currency', currency: 'MXN'})
                    });
                } else {
                    // Verificar si estaba asignada antes
                    const estadoCell = checkbox.closest('tr').cells[5];
                    if (estadoCell.textContent.includes('Asignado')) {
                        removidas.push(sucursalNombre);
                    }
                }
            });

            let html = '<div class="row">';
            
            if (asignadas.length > 0) {
                html += '<div class="col-md-6"><h6 class="text-success"><i class="bi bi-plus-circle me-1"></i>Sucursales asignadas (' + asignadas.length + '):</h6><ul class="list-unstyled">';
                asignadas.forEach(item => {
                    html += `<li><i class="bi bi-building me-1"></i>${item.nombre} - ${item.precio}</li>`;
                });
                html += '</ul></div>';
            }

            if (removidas.length > 0) {
                html += '<div class="col-md-6"><h6 class="text-danger"><i class="bi bi-x-circle me-1"></i>Sucursales removidas (' + removidas.length + '):</h6><ul class="list-unstyled">';
                removidas.forEach(nombre => {
                    html += `<li><i class="bi bi-building me-1"></i>${nombre}</li>`;
                });
                html += '</ul></div>';
            }

            html += '</div>';

            if (asignadas.length === 0 && removidas.length === 0) {
                html = '<div class="alert alert-warning"><i class="bi bi-exclamation-triangle me-2"></i>No hay cambios para aplicar.</div>';
            }

            document.getElementById('previewContent').innerHTML = html;
            
            const modal = new bootstrap.Modal(document.getElementById('previewModal'));
            modal.show();
        }
    </script>
}